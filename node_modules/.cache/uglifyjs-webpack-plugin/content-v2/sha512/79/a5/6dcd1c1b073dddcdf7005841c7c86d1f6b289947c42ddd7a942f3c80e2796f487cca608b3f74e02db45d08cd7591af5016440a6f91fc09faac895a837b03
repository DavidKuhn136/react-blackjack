{"map":"{\"version\":3,\"sources\":[\"c:/Projects/React/react-blackjack/app\\\\reducer.js\"],\"names\":[\"_immutable\",\"__webpack_require__\",\"_cards\",\"setupGame\",\"playerHand\",\"deck\",\"newDeck\",\"dealerHand\",\"_deal\",\"deal\",\"_deal2\",\"_slicedToArray\",\"_deal3\",\"_deal4\",\"push\",\"Map\",\"hasStood\",\"currentState\",\"arguments\",\"length\",\"undefined\",\"type\"],\"mappings\":\"2hBAAAA,EAAAC,EAAA,IAEAC,EAAAD,EAAA,+BAEA,QAAME,EAAY,WACf,IACIC,EADAC,GAAO,EAAAH,EAAAI,WACKC,OAAAA,EAFKC,GAIA,EAAAN,EAAAO,MAAKJ,EAAM,GAJXK,EAAAC,EAAAH,EAAA,GAIpBH,EAJoBK,EAAA,GAIdN,EAJcM,EAAA,GAAA,IAAAE,GAKA,EAAAV,EAAAO,MAAKJ,EAAM,GALXQ,EAAAF,EAAAC,EAAA,GAKpBP,EALoBQ,EAAA,GAOrBN,GAFOA,EALcM,EAAA,IAOGC,KAAK,IAAAd,EAAAe,KAM7B,OAFiB,IAAAf,EAAAe,KAAUV,KAAAA,EAAMD,WAAAA,EAAYG,WAAAA,EAAYS,UAFxC,OAOL,WAAyC,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,IAAAlB,EAAAe,IAClC,OADqDG,UAAA,GACvCG,MACV,IAAK,aACD,OAAOlB,IAEf,OAAOc,gEArBJd\",\"sourcesContent\":[\"import { Map } from 'immutable';\\r\\n\\r\\nimport { newDeck, deal } from './lib/cards';\\r\\n\\r\\nconst setupGame = () => {\\r\\n   let deck = newDeck();\\r\\n   let playerHand, dealerHand;\\r\\n\\r\\n   [deck, playerHand] = deal(deck, 2);\\r\\n   [deck, dealerHand] = deal(deck, 1);\\r\\n\\r\\n   dealerHand = dealerHand.push(new Map());\\r\\n\\r\\n   const hasStood = false;\\r\\n\\r\\n   const newState = new Map({ deck, playerHand, dealerHand, hasStood });\\r\\n\\r\\n   return newState;\\r\\n};\\r\\n\\r\\nexport default function(currentState=new Map(), action) {\\r\\n   switch(action.type) {\\r\\n       case 'SETUP_GAME':\\r\\n           return setupGame();\\r\\n   }\\r\\n   return currentState;\\r\\n}\\r\\n\"]}","code":"webpackHotUpdate(0,{33:function(e,r,t){\"use strict\";(function(e){Object.defineProperty(r,\"__esModule\",{value:!0});var a,n=function(){return function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,r){var t=[],a=!0,n=!1,c=void 0;try{for(var u,o=e[Symbol.iterator]();!(a=(u=o.next()).done)&&(t.push(u.value),!r||t.length!==r);a=!0);}catch(e){n=!0,c=e}finally{try{!a&&o.return&&o.return()}finally{if(n)throw c}}return t}(e,r);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),c=t(12),u=t(32);(a=t(0).enterModule)&&a(e);var o,i,l=function(){var e,r=(0,u.newDeck)(),t=void 0,a=(0,u.deal)(r,2),o=n(a,2);r=o[0],e=o[1];var i=(0,u.deal)(r,1),l=n(i,2);r=l[0],t=(t=l[1]).push(new c.Map);return new c.Map({deck:r,playerHand:e,dealerHand:t,hasStood:!1})},d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new c.Map;switch(arguments[1].type){case\"SETUP_GAME\":return l()}return e};r.default=d,o=t(0).default,i=t(0).leaveModule,o&&(o.register(l,\"setupGame\",\"c:/Projects/React/react-blackjack/app/reducer.js\"),o.register(d,\"default\",\"c:/Projects/React/react-blackjack/app/reducer.js\"),i(e))}).call(this,t(3)(e))}});","extractedComments":[]}